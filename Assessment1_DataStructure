#Node for the Doubly linked list
class Node:
    def __init__(self,data):    
        self.data = data;    
        self.previous = None;    
        self.next = None;

class DoublyLinkedList:    
    def __init__(self):    
        self.head = None;    
        self.tail = None;
        self.count = 0;
    #New node will be added
    def addNode(self, data):    
        newNode = Node(data); 

        #If list is empty    
        if(self.head == None):
            #Initailly head and tail will be same for new node       
            self.head = self.tail = newNode;       
            self.head.previous = None;        
            self.tail.next = None;    
        else:    
            #newNode will be added after tail such that tail's next will point to newNode    
            self.tail.next = newNode;      
            newNode.previous = self.tail;      
            self.tail = newNode;       
            self.tail.next = None; 

    #Display function will print the nodes of the list    
    def display(self):    
        #Node current will point to head    
        current = self.head;    
        if(self.head == None):    
            print("List is empty");    
            return;    
        print("Nodes of doubly linked list: ");    
        while(current != None):         
            print(current.data);    
            current = current.next;

    #searchNode function will search a given node in the list    
    def searchNode(self, value):    
        i = 1;    
        flag = False;    
        #Node current will point to head    
        current = self.head;    
            
        #Checks whether the list is empty    
        if(self.head == None):    
            print("List is empty");    
            return;    
                
        while(current != None):    
            #Compare value to be searched with each node in the list    
            if(current.data == value):    
                flag = True;    
                break;    
            current = current.next;    
            i = i + 1;    
                
        if(flag):    
            print("Node is present in the list at the position : " + str(i));    
        else:    
            print("Node is not present in the list");   
    # Delete a specific item
    def delete(self, value):
        current = self.head
        node_deleted = False
        if current is None:
            node_deleted = False

        elif current.data == value:
            self.head = current.next
            self.head.previous = None
            node_deleted = True

        elif self.tail.data == value:
            self.tail = self.tail.previous
            self.tail.next = None
            node_deleted = True

        else:
            while current:
                if current.data == value:
                    current.previous.next = current.next
                    current.next.previous = current.previous
                    node_deleted = True
                current = current.next

        if node_deleted:
            self.count -= 1 
            

dList = DoublyLinkedList();    
#Add nodes to the list    
dList.addNode(12);    
dList.addNode(52);    
dList.addNode(38);    
dList.addNode(49);    
dList.addNode(75);
dList.addNode(82);
dList.addNode(96);
#Display the List
dList.display(); 
#Searching an Element in the list
dList.searchNode(52);
#Deleting an Element from the list
dList.delete(75);
#Final list display after all operation
dList.display();
